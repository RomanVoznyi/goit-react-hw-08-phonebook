{"version":3,"sources":["redux/auth/auth-slice.js","redux/store.js","App.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selector.js","redux/phonebook/phone-actions.js","redux/phonebook/phone-operations.js","redux/phonebook/phone-reducer.js","redux/phonebook/phone-selector.js","services/api-services.js","components/Navigation.js","components/PrivateRoute.js","components/PublicRoute.js","components/Contacts/ContactForm.js","components/Contacts/ContactList.js","components/Contacts/Filter.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isFetchingAuth","error","extraReducers","userRegisterRequest","fulfilled","state","action","payload","userLoginRequest","userLogoutRequest","_","userCheckCurrent","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","contactsPersistConfig","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneReducers","devTools","process","persistor","persistStore","HomeView","lazy","RegisterView","LoginView","ContactsView","NotFoundView","App","isFetching","useSelector","getFetchingStatus","isError","getErrorStatus","dispatch","useDispatch","useEffect","className","autoClose","type","color","height","width","fallback","path","exact","restricted","redirectTo","Copyright","style","fontSize","ReactDOM","render","StrictMode","loading","document","getElementById","createAsyncThunk","newUser","a","registerRequest","loginRequest","logoutRequest","thunkAPI","getState","persistedToken","rejectWithValue","checkCurrent","getAuthStatus","getUserName","changeFilter","createAction","fetchContacts","getContacts","contacts","addContacts","newObject","addContactsRequest","deleteContacts","id","deleteContactsRequest","createReducer","filter","el","filterReducer","combineReducers","getFilter","getVisibleContacts","arr","toLowerCase","includes","axios","defaults","baseURL","headers","common","Authorization","post","data","toast","message","Promise","isRejected","get","delete","Navigation","userName","to","ContactPhone","activeClassName","Button","variant","onClick","marginLeft","PrivateRoute","children","props","PublicRoute","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","phoneSelectors","checkContacts","target","find","changeInput","value","reset","onSubmit","evt","preventDefault","phoneOperations","number","onChange","placeholder","required","ContactList","map","Filter","phoneActions"],"mappings":"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","file":"static/js/main.353570e7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {\n  userRegisterRequest,\n  userLoginRequest,\n  userLogoutRequest,\n  userCheckCurrent,\n} from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingAuth: false,\n  error: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [userRegisterRequest.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = false;\n      state.isLoggedIn = true;\n    },\n    [userLoginRequest.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = false;\n      state.isLoggedIn = true;\n    },\n    [userLogoutRequest.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.error = false;\n      state.isLoggedIn = false;\n    },\n    [userCheckCurrent.pending](state, _) {\n      state.isFetchingAuth = true;\n    },\n    [userCheckCurrent.fulfilled](state, action) {\n      state.user = action.payload;\n      state.error = false;\n      state.isLoggedIn = true;\n      state.isFetchingAuth = false;\n    },\n\n    [userRegisterRequest.rejected](state, _) {\n      state.error = true;\n    },\n    [userLoginRequest.rejected](state, _) {\n      state.error = true;\n    },\n    [userLogoutRequest.rejected](state, _) {\n      state.error = true;\n    },\n    [userCheckCurrent.rejected](state, _) {\n      state.isFetchingAuth = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { phoneReducers } from './phonebook';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst contactsPersistConfig = {\n  key: 'phoneBook',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phoneBook: persistReducer(contactsPersistConfig, phoneReducers),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PrivateRoute, PublicRoute, Navigation } from 'components';\nimport { userCheckCurrent } from 'redux/auth/auth-operations';\nimport { getFetchingStatus, getErrorStatus } from 'redux/auth/auth-selector';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport { Copyright } from '@material-ui/icons';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst HomeView = lazy(() =>\n  import('views/HomeView' /* webpackChunkName: \"home\" */),\n);\nconst RegisterView = lazy(() =>\n  import('views/RegisterView' /* webpackChunkName: \"registration\" */),\n);\nconst LoginView = lazy(() =>\n  import('views/LoginView' /* webpackChunkName: \"login\" */),\n);\nconst ContactsView = lazy(() =>\n  import('views/ContactsView' /* webpackChunkName: \"contacts\" */),\n);\nconst NotFoundView = lazy(() =>\n  import('views/NotFoundView.js' /* webpackChunkName: \"unknownPage\" */),\n);\n\nconst App = () => {\n  const isFetching = useSelector(getFetchingStatus);\n  const isError = useSelector(getErrorStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userCheckCurrent());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App container\">\n      <ToastContainer autoClose={2000} />\n\n      <Navigation />\n\n      <div className=\"viewContainer\">\n        {isFetching && (\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {isError && <div>\"Something was wrong\"</div>}\n        {!isFetching && !isError && (\n          <Suspense\n            fallback={\n              <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n            }\n          >\n            <Switch>\n              <PublicRoute path=\"/\" exact>\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/register\" exact restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" exact restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n\n              <PublicRoute>\n                <NotFoundView />\n              </PublicRoute>\n            </Switch>\n          </Suspense>\n        )}\n      </div>\n\n      <div className=\"footer\">\n        <Copyright className=\"copyRigths\" style={{ fontSize: 16 }} /> Created by\n        RV | 2021\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport {\n  registerRequest,\n  loginRequest,\n  logoutRequest,\n  checkCurrent,\n} from 'services/api-services';\n\nexport const userRegisterRequest = createAsyncThunk(\n  'auth/register',\n  async newUser => {\n    const user = await registerRequest(newUser);\n    return user;\n  },\n);\n\nexport const userLoginRequest = createAsyncThunk(\n  'auth/login',\n  async newUser => {\n    const user = await loginRequest(newUser);\n    return user;\n  },\n);\n\nexport const userLogoutRequest = createAsyncThunk(\n  'auth/logout',\n  async () => await logoutRequest(),\n);\n\nexport const userCheckCurrent = createAsyncThunk(\n  'auth/checkCurrent',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (!persistedToken) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    const user = await checkCurrent(persistedToken);\n    return user;\n  },\n);\n","export const getAuthStatus = state => state.auth.isLoggedIn;\nexport const getUserName = state => state.auth.user.name;\nexport const getToken = state => state.auth.token;\nexport const getFetchingStatus = state => state.auth.isFetchingAuth;\nexport const getErrorStatus = state => state.auth.error;\n\nexport const getContacts = state => state.phoneBook.contacts;\nexport const getFilter = state => state.phoneBook.filter;\n\nexport const getVisibleContacts = state => {\n  const arr = getContacts(state);\n  const filter = getFilter(state);\n\n  return arr.filter(el =>\n    el.contactName.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('phoneBook/filter');\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport {\n  getContacts,\n  addContactsRequest,\n  deleteContactsRequest,\n} from 'services/api-services';\n\nexport const fetchContacts = createAsyncThunk(\n  'phoneBook/fetchContacts',\n  async () => {\n    const contacts = await getContacts();\n    return contacts;\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'phoneBook/add',\n  async newObject => {\n    const contacts = await addContactsRequest(newObject);\n    return contacts;\n  },\n);\n\nexport const deleteContacts = createAsyncThunk('phoneBook/delete', async id => {\n  return await deleteContactsRequest(id);\n});\n","// import { createSlice } from '@reduxjs/toolkit';\n// import { changeFilter } from './phone-actions';\n// import { fetchContacts, addContacts, deleteContacts } from './phone-operations';\n\n// const initialState = {\n//   contacts: [],\n//   filter: '',\n// };\n\n// const contactsSlice = createSlice({\n//   name: 'phoneBook',\n//   initialState,\n//   reducers: {\n//     [changeFilter](state, action) {\n//       console.log('hello', action);\n//       state.filter = action.payload;\n//     },\n//   },\n//   extraReducers: {\n//     [fetchContacts.fulfilled](state, action) {\n//       state.contacts = action.payload;\n//     },\n//     [addContacts.fulfilled](state, action) {\n//       state.contacts.push(action.payload);\n//     },\n//     [deleteContacts.fulfilled](state, action) {\n//       state.contacts.filter(el => el.id !== action.payload);\n//     },\n//   },\n// });\n\n// export default contactsSlice.reducer;\n\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { changeFilter } from './phone-actions';\nimport { fetchContacts, addContacts, deleteContacts } from './phone-operations';\n\nconst getContacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContacts.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContacts.fulfilled]: (state, action) =>\n    state.filter(el => el.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts: getContacts,\n  filter: filterReducer,\n});\n","export const getContacts = state => state.phoneBook.contacts;\nexport const getFilter = state => state.phoneBook.filter;\n\nexport const getVisibleContacts = state => {\n  const arr = getContacts(state);\n  const filter = getFilter(state);\n\n  return arr.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n};\n","import { isRejected } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\n// Auth requests\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const registerRequest = async newUser => {\n  try {\n    const { data } = await axios.post('/users/signup', newUser);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    toast.error(`Registration error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n};\n\nexport const loginRequest = async user => {\n  try {\n    const { data } = await axios.post('/users/login', user);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    toast.error(`Login error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n};\n\nexport const logoutRequest = async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    toast.error(`Logout error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n};\n\nexport const checkCurrent = async persistedToken => {\n  token.set(persistedToken);\n  try {\n    const { data } = await axios.get('/users/current');\n    return data;\n  } catch (error) {\n    toast.error(`CheckCurrent error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n};\n\n// Contacts requests\nexport async function getContacts() {\n  try {\n    const { data } = await axios.get('/contacts');\n    return data;\n  } catch (error) {\n    toast.error(`Getting Contacts error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n}\n\nexport async function addContactsRequest(newObject) {\n  try {\n    const { data } = await axios.post('/contacts', newObject);\n    return data;\n  } catch (error) {\n    toast.error(`Adding new contact error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n}\n\nexport async function deleteContactsRequest(id) {\n  try {\n    await axios.delete(`/contacts/${id}`);\n    return id;\n  } catch (error) {\n    toast.error(`Deleting contact error. ${error.message}`);\n    return new Promise(isRejected);\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getAuthStatus, getUserName } from 'redux/auth/auth-selector';\nimport { userLogoutRequest } from 'redux/auth/auth-operations';\n\nimport { Button } from '@material-ui/core';\nimport { ContactPhone } from '@material-ui/icons';\nimport { ImReddit, ImExit } from 'react-icons/im';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(state => getAuthStatus(state));\n  const userName = useSelector(state => getUserName(state));\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <nav className=\"navBar container\">\n        <NavLink to=\"/\" className=\"logo\">\n          <div className=\"navLogoBackground\">\n            <ContactPhone className=\"logo\" style={{ fontSize: 25 }} />\n          </div>\n        </NavLink>\n\n        <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activeLink\">\n          Home\n        </NavLink>\n        {isLoggedIn ? (\n          <>\n            <NavLink\n              to=\"/contacts\"\n              className=\"link\"\n              activeClassName=\"activeLink\"\n            >\n              PhoneBook\n            </NavLink>\n            <span className=\"authBar\">\n              <ImReddit className=\"avatar\" style={{ fontSize: 25 }} />\n              <span className=\"greeting\">\n                Welcome <span className=\"userName\">{userName}</span>\n              </span>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"button\"\n                onClick={() => dispatch(userLogoutRequest())}\n              >\n                Log out\n                <ImExit style={{ marginLeft: 10 }} />\n              </Button>\n            </span>\n          </>\n        ) : (\n          <span className=\"authBar\">\n            <NavLink\n              to=\"/register\"\n              exact\n              className=\"link\"\n              activeClassName=\"activeLink\"\n            >\n              Register\n            </NavLink>\n            <NavLink to=\"/login\" className=\"link\" activeClassName=\"activeLink\">\n              Login\n            </NavLink>\n          </span>\n        )}\n      </nav>\n    </>\n  );\n};\n\nexport default Navigation;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAuthStatus } from 'redux/auth/auth-selector';\n\nconst PrivateRoute = ({ children, redirectTo = '/', ...props }) => {\n  const isLoggedIn = useSelector(state => getAuthStatus(state));\n\n  return (\n    <Route {...props}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAuthStatus } from 'redux/auth/auth-selector';\n\nconst PublicRoute = ({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...props\n}) => {\n  const isLoggedIn = useSelector(state => getAuthStatus(state));\n\n  return (\n    <Route {...props}>\n      {isLoggedIn && restricted ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { phoneOperations, phoneSelectors } from 'redux/phonebook';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const contacts = useSelector(state => phoneSelectors.getContacts(state));\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (checkContacts(contacts, contactName)) {\n      toast.error(`${contactName} is already in contacts.`);\n    } else {\n      dispatch(\n        phoneOperations.addContacts({\n          name: contactName,\n          number: contactNumber,\n        }),\n      );\n\n      reset();\n    }\n  };\n\n  const checkContacts = (arr, target) => {\n    return arr.find(({ name }) => name.toLowerCase() === target.toLowerCase());\n  };\n\n  const changeInput = ({ target: { name, value } }) =>\n    name === 'name' ? setContactName(value) : setContactNumber(value);\n\n  const reset = () => {\n    setContactName('');\n    setContactNumber('');\n  };\n\n  return (\n    <form className=\"subForm\" onSubmit={handleSubmit}>\n      <h2 className=\"subFormTitle\">Add new contacts:</h2>\n      <label className=\"subFormLabel\">\n        <span className=\"subFormLabelTitle\">Name:</span>\n        <input\n          className=\"subFormInput\"\n          type=\"text\"\n          onChange={changeInput}\n          value={contactName}\n          name=\"name\"\n          placeholder=\"input name\"\n          required\n        />\n      </label>\n      <label className=\"subFormLabel\">\n        <span className=\"subFormLabelTitle\">Phone:</span>\n        <input\n          className=\"subFormInput\"\n          type=\"text\"\n          onChange={changeInput}\n          value={contactNumber}\n          name=\"number\"\n          placeholder=\"input phone number\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className=\"addBtn\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { phoneOperations, phoneSelectors } from 'redux/phonebook';\n\nimport { MdAccountCircle } from 'react-icons/md';\nimport { CgCloseO } from 'react-icons/cg';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state =>\n    phoneSelectors.getVisibleContacts(state),\n  );\n\n  useEffect(() => dispatch(phoneOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul className=\"contacsList\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"contactItem\">\n          <MdAccountCircle className=\"box1\" />\n          <span className=\"contactName box2\">{name}</span>\n          <span className=\"contactNumber box3\">{number}</span>\n          <button\n            type=\"button\"\n            className=\"closeBtn box4\"\n            onClick={() => dispatch(phoneOperations.deleteContacts(id))}\n          >\n            <CgCloseO />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { phoneActions, phoneSelectors } from 'redux/phonebook';\n\nconst Filter = () => {\n  const value = useSelector(state => phoneSelectors.getFilter(state));\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"subForm\">\n      <h2 className=\"subFormTitle\">Find contacts:</h2>\n      <label className=\"subFormLabel\">\n        <span className=\"subFormLabelTitle\">find:</span>\n        <input\n          className=\"subFormInput\"\n          type=\"text\"\n          onChange={evt =>\n            dispatch(phoneActions.changeFilter(evt.target.value))\n          }\n          value={value}\n          name=\"filter\"\n          placeholder=\"input name\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n"],"sourceRoot":""}